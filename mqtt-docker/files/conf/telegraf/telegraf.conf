# Read metrics about CPU usage
#[[inputs.cpu]]
#  percpu = false
#  totalcpu = true
#  fieldpass = [ "usage*" ]
#  name_suffix = "_vm"
#
## Read metrics about disk usagee
#[[inputs.disk]]
#  fielddrop = [ "inodes*" ]
#  mount_points=["/"]
#  name_suffix = "_vm"
#
## Read metrics about network usage
#[[inputs.net]]
#  interfaces = [ "eth0" ]
#  fielddrop = [ "icmp*", "ip*", "tcp*", "udp*" ]
#  name_suffix = "_vm"
#
## Read metrics about memory usage
#[[inputs.mem]]
#  name_suffix = "_vm"
#
## Read metrics about swap memory usage
#[[inputs.swap]]
#  name_suffix = "_vm"
#
## Read metrics about system load & uptime
#[[inputs.system]]
#  name_suffix = "_vm"
#
## Read metrics from docker socket api
#[[inputs.docker]]
#  endpoint = "unix:///var/run/docker.sock"
#  container_names = []
#  name_suffix = "_docker"


# mqtt 
[[inputs.mqtt_consumer]]
  servers = ["tcp://localhost:1883"]
  qos = 0
  connection_timeout = "30s"
  topics = [
    "hensomedoor",
  ]
  persistent_session = true
  client_id = "telegraf"
  data_format = "json"
  #name_suffix = "hensomedoor"

#[[outputs.influxdb]]
#  database = "vm_metrics"
#  urls = ["http://localhost:8086"]
#  namepass = ["*_vm"]
#
#[[outputs.influxdb]]
#  database = "docker_metrics"
#  urls = ["http://localhost:8086"]
#  namepass = ["*_docker"]
#

[[outputs.influxdb]]
  database = "hensomedoor"
  urls = ["http://localhost:8086"]

[[outputs.file]]
  files = ["stdout"]
